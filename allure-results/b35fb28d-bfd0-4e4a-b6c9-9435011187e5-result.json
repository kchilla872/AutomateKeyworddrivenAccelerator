{"name": "test_keyword_execution", "status": "failed", "statusDetails": {"message": "Failed: Step failed: keyword=click_proceed_to_checkout, args=[]\nException: Locator.wait_for: Timeout 10000ms exceeded.\nCall log:\n  - waiting for locator(\"//*[@id='top-cart-btn-checkout']\") to be visible\n    11 × locator resolved to hidden <button type=\"button\" data-action=\"close\" id=\"top-cart-btn-checkout\" title=\"Proceed to Checkout\" class=\"action primary checkout\" data-bind=\"↵                            attr: {↵                                title: $t('Proceed to Checkout')↵                            },↵                            click: closeMinicart()↵                        , i18n: 'Proceed to Checkout'\">Proceed to Checkout</button>", "trace": "actions = <test_web.keywords.actions.KeywordActions object at 0x000001DE8FD49D50>\nsteps = [{'args': ['https://magento.softwaretestingboard.com/'], 'keyword': 'open_url'}, {'args': ['kckarthik9@gmail.com', 'Te...sults for'], 'keyword': 'assert_search_results_contains'}, {'args': [], 'keyword': 'select_adrienne_trek_jacket'}, ...]\n\n    def run_steps(actions, steps):\n        for step in steps:\n            keyword = step.get(\"keyword\")\n            args = step.get(\"args\", [])\n            print(f\"\\n=== Executing keyword: {keyword} with args: {args} ===\")\n            if not hasattr(actions, keyword):\n                pytest.fail(f\"Keyword '{keyword}' not implemented in KeywordActions.\")\n            method = getattr(actions, keyword)\n            try:\n>               method(*args)\n\ntest_web\\test_runner.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_web\\keywords\\actions.py:91: in click_proceed_to_checkout\n    self.search_page.click_proceed_to_checkout()\ntest_web\\pages\\search_page.py:77: in click_proceed_to_checkout\n    checkout_btn.wait_for(state=\"visible\", timeout=10000)\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:17956: in wait_for\n    self._sync(self._impl_obj.wait_for(timeout=timeout, state=state))\nvenv\\lib\\site-packages\\playwright\\_impl\\_locator.py:692: in wait_for\n    await self._frame.wait_for_selector(\nvenv\\lib\\site-packages\\playwright\\_impl\\_frame.py:369: in wait_for_selector\n    await self._channel.send(\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000001DE8FD48B20>, cb = <function Channel.send.<locals>.<lambda> at 0x000001DE901A2B00>, is_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.wait_for: Timeout 10000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"//*[@id='top-cart-btn-checkout']\") to be visible\nE               11 × locator resolved to hidden <button type=\"button\" data-action=\"close\" id=\"top-cart-btn-checkout\" title=\"Proceed to Checkout\" class=\"action primary checkout\" data-bind=\"↵                            attr: {↵                                title: $t('Proceed to Checkout')↵                            },↵                            click: closeMinicart()↵                        , i18n: 'Proceed to Checkout'\">Proceed to Checkout</button>\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:558: TimeoutError\n\nDuring handling of the above exception, another exception occurred:\n\npage = <Page url='https://magento.softwaretestingboard.com/adrienne-trek-jacket.html'>\n\n    def test_keyword_execution(page: Page):\n        test_files = [\n            \"test_web/data/login_search_checkout.yml\"\n        ]\n        actions = KeywordActions(page)\n        for test_file in test_files:\n            steps = load_test_steps(test_file)\n>           run_steps(actions, steps)\n\ntest_web\\test_runner.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactions = <test_web.keywords.actions.KeywordActions object at 0x000001DE8FD49D50>\nsteps = [{'args': ['https://magento.softwaretestingboard.com/'], 'keyword': 'open_url'}, {'args': ['kckarthik9@gmail.com', 'Te...sults for'], 'keyword': 'assert_search_results_contains'}, {'args': [], 'keyword': 'select_adrienne_trek_jacket'}, ...]\n\n    def run_steps(actions, steps):\n        for step in steps:\n            keyword = step.get(\"keyword\")\n            args = step.get(\"args\", [])\n            print(f\"\\n=== Executing keyword: {keyword} with args: {args} ===\")\n            if not hasattr(actions, keyword):\n                pytest.fail(f\"Keyword '{keyword}' not implemented in KeywordActions.\")\n            method = getattr(actions, keyword)\n            try:\n                method(*args)\n            except Exception as e:\n>               pytest.fail(f\"Step failed: keyword={keyword}, args={args}\\nException: {e}\")\nE               Failed: Step failed: keyword=click_proceed_to_checkout, args=[]\nE               Exception: Locator.wait_for: Timeout 10000ms exceeded.\nE               Call log:\nE                 - waiting for locator(\"//*[@id='top-cart-btn-checkout']\") to be visible\nE                   11 × locator resolved to hidden <button type=\"button\" data-action=\"close\" id=\"top-cart-btn-checkout\" title=\"Proceed to Checkout\" class=\"action primary checkout\" data-bind=\"↵                            attr: {↵                                title: $t('Proceed to Checkout')↵                            },↵                            click: closeMinicart()↵                        , i18n: 'Proceed to Checkout'\">Proceed to Checkout</button>\n\ntest_web\\test_runner.py:21: Failed"}, "steps": [{"name": "Test: test_keyword_execution | Run by: karthik.chillara | Started: 2025-08-11 21:59:05", "status": "passed", "start": 1754929745813, "stop": 1754929795533}], "attachments": [{"name": "stdout", "source": "cf8144d5-b438-4a61-ba12-456870c29668-attachment.txt", "type": "text/plain"}], "start": 1754929745813, "stop": 1754929795533, "uuid": "cfce5342-293d-4ffb-8dee-960aa20e6812", "historyId": "90cea4070fa81fc0da7847296337e1a2", "testCaseId": "90cea4070fa81fc0da7847296337e1a2", "fullName": "test_web.test_runner#test_keyword_execution", "labels": [{"name": "parentSuite", "value": "test_web"}, {"name": "suite", "value": "test_runner"}, {"name": "host", "value": "CBTSINDIAL3410"}, {"name": "thread", "value": "12148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_web.test_runner"}], "titlePath": ["test_web", "test_runner.py"]}
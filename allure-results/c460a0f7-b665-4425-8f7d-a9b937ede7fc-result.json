{"name": "test_keyword_execution", "status": "failed", "statusDetails": {"message": "Failed: Step failed: keyword=click_search_button, args=[]\nException: KeywordActions.click_search_button() missing 1 required positional argument: 'self'", "trace": "actions = <test_web.keywords.actions.KeywordActions object at 0x00000222AA797280>\nsteps = [{'args': ['https://magento.softwaretestingboard.com/'], 'keyword': 'open_url'}, {'args': ['kckarthik9@gmail.com', 'Te...sults for'], 'keyword': 'assert_search_results_contains'}, {'args': [], 'keyword': 'select_adrienne_trek_jacket'}, ...]\n\n    def run_steps(actions, steps):\n        for step in steps:\n            keyword = step.get(\"keyword\")\n            args = step.get(\"args\", [])\n            print(f\"\\n=== Executing keyword: {keyword} with args: {args} ===\")\n            if not hasattr(actions, keyword):\n                pytest.fail(f\"Keyword '{keyword}' not implemented in KeywordActions.\")\n            method = getattr(actions, keyword)\n            try:\n>               method(*args)\nE               TypeError: KeywordActions.click_search_button() missing 1 required positional argument: 'self'\n\ntest_web\\test_runner.py:19: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\npage = <Page url='https://magento.softwaretestingboard.com/'>\n\n    def test_keyword_execution(page: Page):\n        test_files = [\n            \"test_web/data/login_search_checkout.yml\"\n        ]\n        actions = KeywordActions(page)\n        for test_file in test_files:\n            steps = load_test_steps(test_file)\n>           run_steps(actions, steps)\n\ntest_web\\test_runner.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactions = <test_web.keywords.actions.KeywordActions object at 0x00000222AA797280>\nsteps = [{'args': ['https://magento.softwaretestingboard.com/'], 'keyword': 'open_url'}, {'args': ['kckarthik9@gmail.com', 'Te...sults for'], 'keyword': 'assert_search_results_contains'}, {'args': [], 'keyword': 'select_adrienne_trek_jacket'}, ...]\n\n    def run_steps(actions, steps):\n        for step in steps:\n            keyword = step.get(\"keyword\")\n            args = step.get(\"args\", [])\n            print(f\"\\n=== Executing keyword: {keyword} with args: {args} ===\")\n            if not hasattr(actions, keyword):\n                pytest.fail(f\"Keyword '{keyword}' not implemented in KeywordActions.\")\n            method = getattr(actions, keyword)\n            try:\n                method(*args)\n            except Exception as e:\n>               pytest.fail(f\"Step failed: keyword={keyword}, args={args}\\nException: {e}\")\nE               Failed: Step failed: keyword=click_search_button, args=[]\nE               Exception: KeywordActions.click_search_button() missing 1 required positional argument: 'self'\n\ntest_web\\test_runner.py:21: Failed"}, "steps": [{"name": "Test: test_keyword_execution | Run by: karthik.chillara | Started: 2025-08-11 21:16:01", "status": "passed", "steps": [{"name": "open_url", "status": "passed", "start": 1754927161364, "stop": 1754927167640}, {"name": "login_as(Testdemo1)", "status": "passed", "start": 1754927167640, "stop": 1754927176920}, {"name": "input_search_keyword", "status": "passed", "start": 1754927176924, "stop": 1754927177084}], "start": 1754927161353, "stop": 1754927177090}], "attachments": [{"name": "stdout", "source": "952c1cfb-b58a-4fb5-858a-3d3e6a0d7974-attachment.txt", "type": "text/plain"}], "start": 1754927161353, "stop": 1754927177090, "uuid": "0f844593-d1f6-4ae1-9641-cd4686464799", "historyId": "90cea4070fa81fc0da7847296337e1a2", "testCaseId": "90cea4070fa81fc0da7847296337e1a2", "fullName": "test_web.test_runner#test_keyword_execution", "labels": [{"name": "parentSuite", "value": "test_web"}, {"name": "suite", "value": "test_runner"}, {"name": "host", "value": "CBTSINDIAL3410"}, {"name": "thread", "value": "12660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_web.test_runner"}], "titlePath": ["test_web", "test_runner.py"]}